name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_database
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Ensure .env file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate application key
        id: generate_key
        run: |
          key=$(php artisan key:generate --show)
          echo "APP_KEY=$key" >> $GITHUB_ENV
          echo "::set-output name=app_key::$key"
        env:
          APP_ENV: testing

      - name: Debug APP_KEY
        run: echo "APP_KEY=${{ env.APP_KEY }}"

      - name: Run migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_database
          DB_USERNAME: root
          DB_PASSWORD: root
          APP_ENV: testing
          APP_KEY: ${{ env.APP_KEY }}

      - name: Run tests
        run: ./vendor/bin/pest
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_database
          DB_USERNAME: root
          DB_PASSWORD: root
          APP_ENV: testing
          APP_KEY: ${{ env.APP_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to production server
        run: |
          rsync -avz --delete-after \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ dandpjoh@198.54.115.43:/gta.dandelions.website
